{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tabi\\\\Desktop\\\\Web\\\\dev-app\\\\src\\\\NotiContents.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Notifications, { success, info, removeAll } from 'react-notification-system-redux';\nconst notificationOpts = {\n  // uid: 'once-please', // you can specify your own uid if required\n  title: 'Hey, it\\'s good to see you!',\n  message: 'Now you can see how easy it is to use notifications in React!',\n  position: 'tr',\n  autoDismiss: 0,\n  action: {\n    label: 'Click me!!',\n    callback: () => alert('clicked!')\n  }\n};\n\nclass NotiContents extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleRemoveAll = this.handleRemoveAll.bind(this);\n  }\n\n  dispatchNotification(fn, timeout) {\n    setTimeout(() => {\n      fn(notificationOpts);\n    }, timeout);\n  }\n\n  handleClick() {\n    const _this$props = this.props,\n          success = _this$props.success,\n          error = _this$props.error,\n          warning = _this$props.warning,\n          info = _this$props.info,\n          removeAll = _this$props.removeAll;\n    this.dispatchNotification(success, 250);\n    this.dispatchNotification(info, 1000);\n  }\n\n  handleRemoveAll() {\n    this.props.removeAll();\n  }\n\n  render() {\n    const notifications = this.props.notifications;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Spawn some notifications!!!\"));\n  }\n\n}\n\nNotiContents.contextTypes = {\n  store: PropTypes.object\n};\nexport default NotiContents;","map":{"version":3,"sources":["C:/Users/Tabi/Desktop/Web/dev-app/src/NotiContents.js"],"names":["React","PropTypes","connect","Notifications","success","info","removeAll","notificationOpts","title","message","position","autoDismiss","action","label","callback","alert","NotiContents","Component","constructor","props","handleClick","bind","handleRemoveAll","dispatchNotification","fn","timeout","setTimeout","error","warning","render","notifications","contextTypes","store","object"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,OAAOC,aAAP,IAAwBC,OAAxB,EAAiCC,IAAjC,EAAuCC,SAAvC,QAAwD,iCAAxD;AAEA,MAAMC,gBAAgB,GAAG;AACvB;AACAC,EAAAA,KAAK,EAAE,6BAFgB;AAGvBC,EAAAA,OAAO,EAAE,+DAHc;AAIvBC,EAAAA,QAAQ,EAAE,IAJa;AAKvBC,EAAAA,WAAW,EAAE,CALU;AAMvBC,EAAAA,MAAM,EAAE;AACNC,IAAAA,KAAK,EAAE,YADD;AAENC,IAAAA,QAAQ,EAAE,MAAMC,KAAK,CAAC,UAAD;AAFf;AANe,CAAzB;;AAYA,MAAMC,YAAN,SAA2BhB,KAAK,CAACiB,SAAjC,CAA2C;AAEzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKC,eAAL,GAAuB,KAAKA,eAAL,CAAqBD,IAArB,CAA0B,IAA1B,CAAvB;AACD;;AAEDE,EAAAA,oBAAoB,CAACC,EAAD,EAAKC,OAAL,EAAc;AAChCC,IAAAA,UAAU,CAAC,MAAM;AACfF,MAAAA,EAAE,CAACjB,gBAAD,CAAF;AACD,KAFS,EAEPkB,OAFO,CAAV;AAGD;;AAEDL,EAAAA,WAAW,GAAG;AAAA,wBACyC,KAAKD,KAD9C;AAAA,UACJf,OADI,eACJA,OADI;AAAA,UACKuB,KADL,eACKA,KADL;AAAA,UACYC,OADZ,eACYA,OADZ;AAAA,UACqBvB,IADrB,eACqBA,IADrB;AAAA,UAC2BC,SAD3B,eAC2BA,SAD3B;AAEZ,SAAKiB,oBAAL,CAA0BnB,OAA1B,EAAmC,GAAnC;AACA,SAAKmB,oBAAL,CAA0BlB,IAA1B,EAAgC,IAAhC;AACD;;AAEDiB,EAAAA,eAAe,GAAG;AAChB,SAAKH,KAAL,CAAWb,SAAX;AACD;;AAEDuB,EAAAA,MAAM,GAAG;AAAA,UACEC,aADF,GACmB,KAAKX,KADxB,CACEW,aADF;AAEP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,OAAO,EAAE,KAAKV,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADF,CADF;AAOD;;AAlCwC;;AAqC3CJ,YAAY,CAACe,YAAb,GAA4B;AAC1BC,EAAAA,KAAK,EAAE/B,SAAS,CAACgC;AADS,CAA5B;AAIA,eAAejB,YAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\n \r\nimport Notifications, { success, info, removeAll } from 'react-notification-system-redux';\r\n \r\nconst notificationOpts = {\r\n  // uid: 'once-please', // you can specify your own uid if required\r\n  title: 'Hey, it\\'s good to see you!',\r\n  message: 'Now you can see how easy it is to use notifications in React!',\r\n  position: 'tr',\r\n  autoDismiss: 0,\r\n  action: {\r\n    label: 'Click me!!',\r\n    callback: () => alert('clicked!')\r\n  }\r\n};\r\n \r\nclass NotiContents extends React.Component {\r\n \r\n  constructor(props) {\r\n    super(props);\r\n \r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.handleRemoveAll = this.handleRemoveAll.bind(this);\r\n  }\r\n\r\n  dispatchNotification(fn, timeout) {\r\n    setTimeout(() => {\r\n      fn(notificationOpts);\r\n    }, timeout);\r\n  }\r\n \r\n  handleClick() {\r\n    const { success, error, warning, info, removeAll } = this.props;\r\n    this.dispatchNotification(success, 250);\r\n    this.dispatchNotification(info, 1000);\r\n  }\r\n \r\n  handleRemoveAll() {\r\n    this.props.removeAll();\r\n  }\r\n\r\n  render() {\r\n      const {notifications} = this.props;\r\n    return (\r\n      <div>\r\n        <button onClick={this.handleClick}>\r\n          Spawn some notifications!!!\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n \r\nNotiContents.contextTypes = {\r\n  store: PropTypes.object\r\n};\r\n \r\nexport default NotiContents;"]},"metadata":{},"sourceType":"module"}